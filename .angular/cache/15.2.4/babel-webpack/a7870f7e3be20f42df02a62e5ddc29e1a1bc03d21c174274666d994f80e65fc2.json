{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  getQuery(query) {\n    const url = environment.url + `${query}`;\n    const headers = new HttpHeaders({\n      Authorization: \"Bearer BQB7Unn14ghHFPcFeh1DHiDxSfdZLua7jaSI-dtipbyBVEkaEuas535r-ai_P3wCWUkVVqrSviWnELO9hL_-DdQh0g2jW399kWAxPeszd_0-L9H6DQEPtCUgaxDkQOg-l1UNBZSgha9_2Rvpjc4dwFVTqgPbNkdREeLbDCs5ytpVnJcWWFQruBt8DAhiaef9mml7\"\n    });\n    return this._http.get(url, {\n      headers\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gCAAgC;AAC5D,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;EAAe;EAEjCC,QAAQ,CAACC,KAAa;IAC3B,MAAMC,GAAG,GAAWP,WAAW,CAACO,GAAG,GAAG,GAAGD,KAAK,EAAE;IAEhD,MAAME,OAAO,GAAG,IAAIP,WAAW,CAAC;MAC9BQ,aAAa,EACX;KACH,CAAC;IAEF,OAAO,IAAI,CAACL,KAAK,CAACM,GAAG,CAACH,GAAG,EAAE;MAAEC;IAAO,CAAE,CAAC;EACzC;;AAZWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["environment","HttpHeaders","SpotifyService","constructor","_http","getQuery","query","url","headers","Authorization","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/blackleadstudio1/Documents/GitHub/Spotify-App/src/app/services/spotify.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SpotifyService {\n  constructor(private _http: HttpClient) {}\n\n  public getQuery(query: string) {\n    const url: string = environment.url + `${query}`;\n\n    const headers = new HttpHeaders({\n      Authorization:\n        \"Bearer BQB7Unn14ghHFPcFeh1DHiDxSfdZLua7jaSI-dtipbyBVEkaEuas535r-ai_P3wCWUkVVqrSviWnELO9hL_-DdQh0g2jW399kWAxPeszd_0-L9H6DQEPtCUgaxDkQOg-l1UNBZSgha9_2Rvpjc4dwFVTqgPbNkdREeLbDCs5ytpVnJcWWFQruBt8DAhiaef9mml7\",\n    });\n\n    return this._http.get(url, { headers });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}